// ・メディアクエリ
$breakP: 768px;
$tab: 1120px;

@mixin pc {

  @media print,
  screen and (min-width:($breakP + 1)) {
    @content;
  }
}

@mixin tab {
  @media screen and (max-width:($tab)) and (min-width:($breakP + 1)) {
    @content;
  }
}

@mixin sp {
  @media only screen and (max-width:($breakP)) {
    @content;
  }
}

// ・font-size指定にremを使う用
@mixin font-size($size, $base: 10) {
  font-size: $size + px;

  // font-size: ($size / $base) + rem;
  @media (max-width: 374px) {
    $winW: 375;
    // 画面幅を設定する
    font-size: ($size / $winW) * 100 + vw;
  }
}

@mixin smartFontSize($pcSize:14, $pcLineHeight:1.5, $spSize:12, $spLineHeight:1.5, $letterSpacing:.15, $lhCrop: on) {
  font-size: $pcSize + px;

  @if $pcLineHeight !=1.5 {
    line-height: $pcLineHeight;
  }

  @if $letterSpacing !=.15 {
    letter-spacing: $letterSpacing + em;
  }

  @if $lhCrop==on {
    @include lhCrop($pcLineHeight);
  }

  @include sp {
    font-size: $spSize + px;

    @if $spLineHeight !=$pcLineHeight {
      line-height: $spLineHeight;

      @if $lhCrop==on {
        @include lhCrop($spLineHeight);
      }
    }
  }

  $winW : 375;

  @media (max-width: ($winW - 1) + px) {
    font-size: ($spSize / $winW) * 100 + vw;
  }
}

@mixin font-sizeVw($size) {
  $winW: 375;
  font-size: $size + px;
  font-size: ($size / $winW) * 100 + vw;
}

// ・CSSshadow
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, 1)) {
  text-shadow: $x $y $blur $color,
    $x $y $blur $color,
    $x $y $blur $color,
    $x $y $blur $color,
    $x $y $blur $color,
    $x $y $blur $color;
}

@mixin box-shadow($h: 10px, $v: 10px, $b: 0px, $s: 0px, $c: $pure-black) {
  box-shadow: $h $v $b $s $c;
}

// ・擬似要素
@mixin pseudo($w: 100%, $h: 100%) {
  content: '';
  position: absolute;
  width: $w;
  height: $h;
}

// ・行間高さ余白カット
@mixin lhCrop($_lineheight) {
  &:before {
    content: '';
    display: block;
    height: 0;
    width: 0;
    margin-top: calc((1 - #{$_lineheight}) * 0.5em);
  }

  &:after {
    content: '';
    display: block;
    height: 0;
    width: 0;
    margin-bottom: calc((1 - #{$_lineheight}) * 0.5em);
  }
}

// ・flexbox
@mixin flexbox {
  display: flex;
}

@mixin flex($values) {
  flex: $values;
}

@mixin flex-direction($direction) {
  @if $direction==column {
    flex-direction: column;
  }

  @else if $direction==row {
    flex-direction: row;
  }
}

// ・センタリング
@mixin center {
  position: relative;
  text-align: center;
  top: 50%;
  transform: translateY(-50%);
}

// ・三点リーダ-
@mixin truncate($width: 100%) {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: $width;
}
